一、实现封装的步骤是？
1.修改属性的可见性  设为private
2.创建setter/getter方法  用于属性的读写 使用public修饰符
3.在setter/getter方法种加入属性的控制语句
好处：
    1.只能通过规定的方法访问数据。
    2.隐藏类的实例细节，方便修改和实现。
二、常用的访问修饰符有那那些？
private 本类中可访问
默认的  本类  同包里可访问
protected  受保护的  本类 同包 子类中可以继承
public  任何地方都可以访问
三、继承有何好处
子类拥有父类的所有属性和方法（除了private修饰的属性不能拥有）从而实现了实现代码的复用
使用继承减少代码量
提高了代码的维护性
使用单词extends
java中的继承是单继承，一个类只有一个直接父类
　继承是类与类的一种关系，是一种“is a”的关系
四、如何实现继承？
语法规则，只要在子类加上extends关键字继承相应的父类就可以了：
super 只能在构造方法中调用
super（）必须放在第一位
静态方法中不能有this和super

　　class 子类 extends 父类
eg：class Dog extends Pet{
。。。。。。。。。。
}
五、方法的重写
定义：子类如果对继承的父类的方法不满意（不适合），可以自己编写继承的方法，这种方式就称为方法的重写。当调用方法时会优先调用子类的方法。
重写要注意：
    a、返回值类型
    b、方法名
    c、参数类型及个数
    d、不能严于父类
都要与父类继承的方法相同，才叫方法的重写。

重载和重写的区别：
　　方法重载：在同一个类中处理不同数据的多个相同方法名的多态手段。
　　方法重写：相对继承而言，子类中对父类已经存在的方法进行区别化的修改。
B、继承的初始化顺序

　　1、初始化父类再初始化子类

　　2、先执行初始化对象中属性，再执行构造方法中的初始化。

　基于上面两点，我们就知道实例化一个子类，java程序的执行顺序是：

　父类对象属性初始化---->父类对象构造方法---->子类对象属性初始化--->子类对象构造方法　　　





