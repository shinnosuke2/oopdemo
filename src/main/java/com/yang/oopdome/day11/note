一、抽象类与抽象方法的使用
1.抽象类中可以没有抽象方法，有抽象方法的类一定是抽象类
2.如果子类没有实现父类的所有抽象方法，子类必须被定义为抽象类
3.没有抽象构造方法，也没有抽象静态方法
4.抽象类中可以有非抽象方法，创建子类的实例时可以调用
二、接口的特性
1.接口没有构造方法，接口不可以被实例化
2.实现类必须实现接口的所有方法，除非这个类也是抽象类。
3.实现类可以实现多个接口（关键词 implements  多个接口用逗号隔开）
4.接口中的变量都是静态常量（public static final)
三、抽象类VS接口
相同点：
    代表系统的抽象层
    都不可以被实例化
    都能包含抽象方法
    用于描述系统提供的服务，不必提供具体实现
不同点：
    抽象类中可以有非抽象方法，接口中只能包含抽象方法
    抽象类便于复用，接口便于代码维护
    一个类只能继承一个直接的父类，但可以实现多个接口。
四、面向对象设计原则
    多用组合少用继承
    针对接口编程
    针对扩展开放，针对改变封闭（开闭原则）
